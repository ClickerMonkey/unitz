/* unitz 0.6.0 - A unit parser, converter, & combiner in JS by Philip Diffenderfer */
!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.Unitz=e()}(this,function(){function t(t){return"string"==typeof t}function e(t){return null!==t&&"object"==typeof t}function i(t){return"number"==typeof t&&!isNaN(t)}function r(t){return t instanceof Array}function s(t){var e=!1;return t in B&&(e=B[t].removeUnit(t)),e}function n(t){var e=!1;return t in B&&(e=B[t].removeGroup(t)),e}function a(t){return i(t)&&Math.abs(Math.abs(t)-1)<C.epsilon}function o(t){return i(t)&&Math.abs(Math.floor(t)-t)<1e-8}function u(t,e){return t.substring(0,C.heuristicLength)===e.substring(0,C.heuristicLength)}function l(t,e){return e?t+" "+e:t}function b(s){return t(s)?s.split(C.separator):r(s)?s:e(s)||i(s)?[s]:[]}function d(r){return t(r)?c(r):e(r)?r:i(r)?z.fromNumber(r):!1}function c(t){var e=C.regex.exec(t),i=e[1],r=e[3],s=e[5],n=e[6],a=e[7].toLowerCase();if(!i&&!n&&!a)return!1;var o=1;if(i){o=parseInt(i);var u=0>o?-1:1;s?(s=parseInt(s),r?o+=parseInt(r)/s*u:o/=s):n&&(o+=parseFloat("0."+n)*u)}return new z(o,a,B[a],t)}function m(t,e){var i=d(t),r=[];if(i.unitClass&&i.group)for(var s=i.unitClass.groups,n=s.length-1;n>=0;n--){var a=s[n];if(!e||-1!==e.indexOf(a.unit))for(var o=i.convert(a.unit),u=a.denominators,b=0;b<u.length;b++){var c=u[b],m=Math.floor(c*o);if(m>=1){var p=m/c,g=Math.floor(p),f="";g>=1&&(f+=g,m-=g*c),m>0&&c>1&&(f+=(f.length>0?" ":"")+m+"/"+c),f=l(f,a.unit),r.push(f),i.value-=h(f,i.unit);break}}}return r.length?r.join(", "):i.normal}function p(t,e,i,r){var s=d(t);if(s.unitClass){for(var n=null,a=null,o=s.unitClass.groups,u=0;u<o.length;u++){var b=o[u],c=s.convert(b.unit,!0);if(c.valid){var m=!n;if(n){var p=c.distance<=n.distance,h=c.string.length<=n.string.length,g=(c.actual+"").length<=(n.actual+"").length;p&&(e?h:g)&&(m=!0)}m&&(n=c,a=b)}}n&&(s===t?s=new z(n.actual,a.unit,s.unitClass):(s.value=n.actual,s.unit=a.unit,s.group=a),s.normal=e?l(n.string,a.getUnit(n.isSingular(),i)):a.addUnit(n.actual,i))}return s}function h(t,i){var r=d(t);if(!e(r))return!1;var s=r.value,n=r.unitClass;if(!n&&!i)return s;if(!(n&&i in n.converters))return!1;if(n.groupMap[i]===n.groupMap[r.unit])return s;s*=n.converters[r.unit];var a=n.bases[r.unit],o=n.bases[i];return a!==o&&(s*=n.mapping[a][o]),s/=n.converters[i]}function g(t,e){for(var i="",r=0;r<t.length;r++){var s=t[r];s.length&&(""===i||e&&s.length<i.length||!e&&s.length>i.length)&&(i=s)}return i}function f(t,e,i,r,s){for(var n=b(t),o=b(e),c=n.concat(o),m=[],h=0;h<c.length;h++){var f=d(c[h]);f!==!1&&(f.units=[],f.units.push(f.unit),m.push(f))}for(var h=0;h<m.length-1;h++)for(var y=m[h],v=m.length-1;v>h;v--){var G=m[v],q=G.convert(y.unit);q!==!1&&y.group?(m.splice(v,1),y.value+=q):y.unit&&G.unit?u(y.unit,G.unit)&&(m.splice(v,1),y.value+=G.value,y.units=y.units.concat(G.units)):(m.splice(v,1),y.value+=G.value,y.units=y.units.concat(G.units))}for(var k=[],h=0;h<m.length;h++){var y=m[h];y.group?y.normal=y.group.addUnit(y.value,r):(y.unit=g(y.units,a(y.value)),y.normal=l(y.value,y.unit));var z=p(y,i,r,s);z&&z.normal&&k.push(z.normal)}return k.join(C.separatorJoin)}function y(t,e,i,r,s,n){for(var o=b(t),c=b(e),m=o.concat(c),h=[],f=0;f<m.length;f++){var y=d(m[f]);y!==!1&&(y.sign=f>=o.length?-1:1,y.units=[],y.units.push(y.unit),h.push(y))}for(var f=0;f<h.length-1;f++)for(var v=h[f],G=h.length-1;G>f;G--){var q=h[G],k=q.convert(v.unit),z=q.sign*v.sign;k!==!1&&v.group?(h.splice(G,1),v.value+=k*z):v.unit&&q.unit?u(v.unit,q.unit)&&(h.splice(G,1),v.value+=q.value*z,v.units=v.units.concat(q.units)):(h.splice(G,1),v.value+=q.value*z,v.units=v.units.concat(q.units))}for(var w=[],f=0;f<h.length;f++){var v=h[f];if(!(v.value<0||v.sign<0)||i){v.group?v.normal=v.group.addUnit(v.value,s):(v.unit=g(v.units,a(v.value)),v.normal=l(v.value,v.unit));var M=p(v,r,s,n);M&&M.normal&&w.push(M.normal)}}return w.join(C.separatorJoin)}function v(t,r,s,n){var a=d(t);if(!e(a)||!a.unitClass)return t;for(var o=a.unitClass.groups,u=a.conversions=[],l=0;l<o.length;l++){var b=o[l],c=a.convert(b.unit);if(i(c)&&!(i(r)&&r>c||i(s)&&c>s)){var m=new w(c,b.denominators,n);u.push(new M(c,m,b))}}return a}function G(t){U[t.className]=t,x.push(t);for(var e in t.converters)B[e]=t}function q(t){this.className=t,this.converters={},this.mapping={},this.bases={},this.groups=[],this.groupMap={}}function k(t,e,i,r,s,n,a){this.unit=t,this.baseUnit=e,this.baseScale=i,this.units=r,this.singular=s,this.plural=n,this.denominators=a}function z(t,e,i,r){this.value=t,this.unit=e,this.unitClass=i,this.group=i?i.groupMap[e]:null,this.normal=this.group?this.group.addUnit(t):r}function w(t,e,r,s){for(var n=Math.abs(Math.floor(t)-t),a=1,u=t,l=0;l<e.length&&n>C.epsilon;l++){var b=e[l],d=Math.round(t*b),c=d/b-t,m=Math.abs(c);if(i(r)&&b>r)break;s&&c>0||m+C.epsilon<n&&(a=b,u=d,n=m)}this.value=t,this.numerator=u,this.denominator=a,this.actual=u/a,this.distance=n,this.whole=this.actual<0?Math.ceil(this.actual):Math.floor(this.actual),this.remainder=Math.abs(Math.round((t-this.whole)*a)),this.valid=1!==a||o(u),this.string="",1===a?this.string=u+"":0===this.whole?this.string=u+"/"+a:0!==this.remainder?this.string=this.whole+" "+this.remainder+"/"+a:this.string=this.whole+""}function M(t,e,i){this.decimal=t,this.fraction=e,this.group=i,this.shortUnit=i.unit,this.longUnit=e.valid?i.getUnit(e.isSingular()):i.getUnit(t),this.friendly=e.valid?e.string:t,this.shortNormal=l(this.friendly,this.shortUnit),this.longNormal=l(this.friendly,this.longUnit)}var C={},x=[],U={},B={};return q.prototype={addGroup:function(t,e,i,r,s,n){var a=i[0],o=a;e&&(t*=this.converters[e],o=this.bases[e]);for(var u=new k(a,o,t,i,s,n,r),l=0;l<i.length;l++){var b=i[l];this.converters[b]=t,this.bases[b]=o,this.groupMap[b]=u}return this.groups.push(u),u},removeUnit:function(t){var e=t in this.converters;return delete this.converters[t],delete this.bases[t],delete this.groupMap[t],delete B[t],e},removeGroup:function(t){var e=this.groupMap[t],i=!1;if(e){for(var r=e.units,s=0;s<r.length;s++){var t=r[s];this.groupMap[t]===e&&(delete this.converters[t],delete this.bases[t],delete this.groupMap[t],delete B[t])}var n=this.groups.indexOf(e);-1!==n&&(this.groups.splice(n,1),i=!0)}return i},addOneBaseConversion:function(t,e,i){t in this.mapping||(this.mapping[t]={}),this.mapping[t][e]=i},addBaseConversion:function(t,e,i){this.addOneBaseConversion(t,e,i),this.addOneBaseConversion(e,t,1/i)}},k.prototype={addUnit:function(t,e){return l(t,this.getUnit(t,e))},getUnit:function(t,e){return e?this.unit:a(t)?this.singular:this.plural}},z.prototype={convert:function(t,s,n,a,o,u){var b=h(this,t);if(b!==!1&&s){var d=this.group?this.group.denominators:o;r(d)&&(b=new w(b,d,a,u),e(b)&&n&&t&&(b.string=l(b.string,t)))}return n&&i(b)&&t&&(b=l(b,t)),b},best:function(t,e,i){return p(this,t,e,i)},fraction:function(t,e,i,r){var s=this.group?this.group.denominators:[],n=e||s,a=new w(this.value,n,i,r);return t&&(a.string=l(a.string,this.unit)),a}},z.fromNumber=function(t){return new z(t,"",null,t,null)},w.prototype={isSingular:function(){return 1===Math.ceil(Math.abs(this.actual))?1:0}},G(function(){var t=new q("Area");return t.addGroup(1,null,["sqin","sq. in.","sq in","in2","in^2","square inch","square inches"],[2,4,8,16],"square inch","square inches"),t.addGroup(144,"sqin",["sqft","sq. ft.","sq ft","ft2","ft^2","square foot","square feet"],[2,4,8,16],"square foot","square feet"),t.addGroup(9,"sqft",["sqyd","sq. yd.","sq yd","yd2","yd^2","square yard","square yards"],[2,3,4,8,9,16],"square yard","square yards"),t.addGroup(4840,"sqyd",["acre","acres"],[2,3,4,8,10],"acre","acres"),t.addGroup(640,"acre",["sqmi","sq. mi.","sq mi","mi2","mi^2","square mile","square miles"],[2,3,4,8,10],"square mile","square miles"),t.addGroup(1,null,["sqmm","sq. mm.","sq mm","mm2","mm^2","square millimeter","square millimeters"],[2,4,8,16],"square millimeter","square millimeters"),t.addGroup(100,"sqmm",["sqcm","sq. cm.","sq cm","cm2","cm^2","square centimeter","square centimeters"],[2,4,8,16],"square centimeter","square centimeters"),t.addGroup(1e4,"sqcm",["sqm","sq. m.","sq m","m2","m^2","square meter","square meters"],[2,4,8,16],"square meter","square meters"),t.addGroup(1e6,"sqm",["sqkm","sq. km.","sq km","km2","km^2","square kilometer","square kilometers"],[2,3,4,8,9,16],"square kilometer","square kilometers"),t.addBaseConversion("sqin","sqmm",645.16),t}()),G(function(){var t=new q("Digital");return t.addGroup(1,null,["bit","bits"],[],"bit","bits"),t.addGroup(4,"bit",["nibble","nibbles","nybble","nyble","half-byte","half byte","tetrade","semi-octet","quadbit","quartet"],[],"nibble","nibbles"),t.addGroup(8,"bit",["b","byte","bytes"],[2,8],"byte","bytes"),t.addGroup(1e3,"b",["kb","kilobyte","kilobytes"],[2,4,5,10],"kilobyte","kilobytes"),t.addGroup(1e3,"kb",["mb","megabyte","megabytes"],[2,4,5,10],"megabyte","megabytes"),t.addGroup(1e3,"mb",["gb","gigabyte","gigabytes"],[2,4,5,10],"gigabyte","gigabytes"),t.addGroup(1e3,"gb",["tb","terabyte","terabytes"],[2,4,5,10],"terabyte","terabytes"),t.addGroup(1e3,"tb",["pb","petabyte","petabytes"],[2,4,5,10],"petabyte","petabytes"),t.addGroup(1e3,"pb",["eb","exabyte","exabytes"],[2,4,5,10],"exabyte","exabytes"),t.addGroup(1e3,"eb",["zb","zettabyte","zettabytes"],[2,4,5,10],"zettabyte","zettabytes"),t.addGroup(1e3,"zb",["yb","yottabyte","yottabytes"],[2,4,5,10],"yottabyte","yottabytes"),t.addGroup(1024,"b",["kib","kibibyte","kibibytes"],[2,4,8,16],"kibibyte","kibibytes"),t.addGroup(1024,"kib",["mib","mebibyte","mebibytes"],[2,4,8,16],"mebibyte","mebibytes"),t.addGroup(1024,"mib",["gib","gibibyte","gibibytes"],[2,4,8,16],"gibibyte","gibibytes"),t.addGroup(1024,"gib",["tib","tebibyte","tebibytes"],[2,4,8,16],"tebibyte","tebibytes"),t.addGroup(1024,"tib",["pib","pebibyte","pebibytes"],[2,4,8,16],"pebibyte","pebibytes"),t.addGroup(1024,"pib",["eib","exbibyte","exbibytes"],[2,4,8,16],"exbibyte","exbibytes"),t.addGroup(1024,"eib",["zib","zebibyte","zebibytes"],[2,4,8,16],"zebibyte","zebibytes"),t.addGroup(1024,"zib",["yib","yobibyte","yobibytes"],[2,4,8,16],"yobibyte","yobibytes"),t.addGroup(1e3,"bit",["kbit","kilobit","kilobits"],[2,4,5,10],"kilobit","kilobits"),t.addGroup(1e3,"kbit",["mbit","megabit","megabits"],[2,4,5,10],"megabit","megabits"),t.addGroup(1e3,"mbit",["gbit","gigabit","gigabits"],[2,4,5,10],"gigabit","gigabits"),t.addGroup(1e3,"gbit",["tbit","terabit","terabits"],[2,4,5,10],"terabit","terabits"),t.addGroup(1e3,"tbit",["pbit","petabit","petabits"],[2,4,5,10],"petabit","petabits"),t.addGroup(1e3,"pbit",["ebit","exabit","exabits"],[2,4,5,10],"exabit","exabits"),t.addGroup(1e3,"ebit",["zbit","zettabit","zettabits"],[2,4,5,10],"zettabit","zettabits"),t.addGroup(1e3,"zbit",["ybit","yottabit","yottabits"],[2,4,5,10],"yottabit","yottabits"),t.addGroup(1024,"bit",["kibit","kibibit","kibibits"],[2,4,8,16],"kibibit","kibibits"),t.addGroup(1024,"kibit",["mibit","mebibit","mebibits"],[2,4,8,16],"mebibit","mebibits"),t.addGroup(1024,"mibit",["gibit","gibibit","gibibits"],[2,4,8,16],"gibibit","gibibits"),t.addGroup(1024,"gibit",["tibit","tebibit","tebibits"],[2,4,8,16],"tebibit","tebibits"),t.addGroup(1024,"tibit",["pibit","pebibit","pebibits"],[2,4,8,16],"pebibit","pebibits"),t.addGroup(1024,"pibit",["eibit","exbibit","exbibits"],[2,4,8,16],"exbibit","exbibits"),t.addGroup(1024,"eibit",["zibit","zebibit","zebibits"],[2,4,8,16],"zebibit","zebibits"),t.addGroup(1024,"zibit",["yibit","yobibit","yobibits"],[2,4,8,16],"yobibit","yobibits"),t}()),G(function(){var t=new q("Length");return t.addGroup(1,null,["in","inch","inches",'"'],[2,3,4,8,16,32],"inch","inches"),t.addGroup(12,"in",["ft","foot","feet","'"],[2,3,4,12],"foot","feet"),t.addGroup(3,"ft",["yd","yds","yard","yards"],[3],"yard","yards"),t.addGroup(5280,"ft",["mi","mile","miles"],[2,3,4,5,6,7,8,9,10],"mile","miles"),t.addGroup(3,"mi",["league","leagues"],[2,3,4,5,6,7,8,9,10],"league","leagues"),t.addGroup(1,null,["mm","millimeter","millimeters"],[10],"millimeter","millimeters"),t.addGroup(10,"mm",["cm","centimeter","centimeters"],[2,4,10],"centimeter","centimeters"),t.addGroup(10,"cm",["dc","decimeter","decimeters"],[10],"decimeter","decimeters"),t.addGroup(100,"cm",["m","meter","meters"],[2,3,4,5,10],"meter","meters"),t.addGroup(1e3,"m",["km","kilometer","kilometers"],[2,3,4,5,6,7,8,9,10],"kilometer","kilometers"),t.addBaseConversion("in","mm",25.4),t}()),G(function(){var t=new q("Rotation");return t.addGroup(1,null,["deg","degs","degree","degrees"],[],"degree","degrees"),t.addGroup(1,null,["rad","rads","radian","radians"],[],"radian","radians"),t.addBaseConversion("deg","rad",.0174533),t}()),G(function(){var t=new q("Time");return t.addGroup(1,null,["ns","nanosecond","nanoseconds","nano","nanos"],[10,100],"nanosecond","nanoseconds"),t.addGroup(1e3,"ns",["us","microsecond","microseconds","micros","micro"],[10,100,1e3],"microsecond","microseconds"),t.addGroup(1e3,"us",["ms","millisecond","milliseconds","millis"],[10,100,1e3],"millisecond","milliseconds"),t.addGroup(1e3,"ms",["s","second","seconds","sec","secs"],[2,10,100,1e3],"second","seconds"),t.addGroup(60,"s",["min","minute","minutes","mins"],[2,3,4,60],"minute","minutes"),t.addGroup(60,"min",["hr","hour","hours","hrs"],[2,3,4,60],"hour","hours"),t.addGroup(24,"hr",["day","days"],[2,3,4,6,24],"day","days"),t.addGroup(7,"day",["wk","week","weeks","wks"],[7],"week","weeks"),t.addGroup(365.2425,"day",["yr","year","years","yrs"],[2,3,4,6,12,52],"year","years"),t}()),G(function(){var t=new q("Volume");return t.addGroup(1,null,["tsp","ts","tsps","teaspoon","teaspoons"],[2,3,4],"teaspoon","teaspoons"),t.addGroup(3,"tsp",["tbsp","tbsps","tablespoon","tablespoons"],[2,3,4],"tablespoon","tablespoons"),t.addGroup(6,"tsp",["oz","ounce","ounces","fl-oz","fl oz","floz","fluid ounce","fl. oz.","oz. fl.","oz fl"],[2,3,6],"fluid ounce","fluid ounces"),t.addGroup(8,"oz",["c","cup","cups"],[2,3,4],"cup","cups"),t.addGroup(2,"c",["pt","pint","pints"],[2,4,8],"pint","pints"),t.addGroup(4,"c",["qt","quart","quarts"],[2,4,8],"quart","quarts"),t.addGroup(4,"qt",["gal","gallon","gallons"],[2,4,8,16],"gallon","gallons"),t.addGroup(1,null,["ml","millilitre","millilitres","milliliter","milliliters"],[2,10],"milliliter","milliliters"),t.addGroup(10,"ml",["cl","centilitre","centilitres","centiliter","centiliters"],[10],"centiliter","centiliters"),t.addGroup(1e3,"ml",["l","litre","litres","liter","liters"],[2,3,4,10],"liter","liters"),t.addGroup(10,"l",["dl","decalitre","decalitres","decaliter","decaliters"],[10,100],"decaliter","decaliters"),t.addGroup(1e3,"l",["kl","kilolitre","kilolitres","kiloliter","kiloliters"],[10,100],"kiloliter","kiloliters"),t.addGroup(1,null,["mm3","mm^3","cubic mm","cubic millimeter","cubic millimeters"],[2,4,8],"cubic millimeter","cubic millimeters"),t.addGroup(1e3,"mm3",["cm3","cm^3","cubiccmm","cubic centimeter","cubic centimeters"],[2,4,8],"cubic centimeter","cubic centimeters"),t.addGroup(1e6,"cm3",["m3","m^3","cubic m","cubic meter","cubic meters"],[2,4,8],"cubic meter","cubic meters"),t.addGroup(1e9,"m3",["km3","km^3","cubic km","meter","meters"],[2,4,8],"meter","meters"),t.addGroup(1,null,["in3","in^3","cubic in","cubic inch","cubic inches"],[2,4,8],"cubic inch","cubic inches"),t.addGroup(1728,"in3",["ft3","ft^3","cubic ft","cubic foot","cubic feet"],[2,4,8],"cubic foot","cubic feet"),t.addGroup(27,"ft3",["yd3","yd^3","cubic yd","cubic yard","cubic yards"],[2,4,8],"cubic yard","cubic yards"),t.addBaseConversion("tsp","ml",4.92892),t.addBaseConversion("ml","mm3",1),t.addBaseConversion("tsp","in3",.300781),t}()),G(function(){var t=new q("Weight");return t.addGroup(1,null,["mg","milligram","milligrams"],[2,10],"milligram","milligrams"),t.addGroup(1e3,"mg",["g","gram","grams"],[2,10,100],"gram","grams"),t.addGroup(1e3,"g",["kg","kilogram","kilograms","kilo","kilos"],[2,10,100],"kilogram","kilograms"),t.addGroup(1,null,["oz","ounce","ounces"],[2,3,4,16],"ounce","ounces"),t.addGroup(16,"oz",["lb","lbs","pound","pounds"],[2,3,4,16],"pound","pounds"),t.addGroup(2e3,"lb",["ton","tons","tonnes"],[2,3,4,10],"ton","tons"),t.addBaseConversion("mg","oz",35274e-9),t}()),C.classes=x,C.classMap=U,C.unitToClass=B,C.regex=/^\s*(-?\d*)(\s+(\d+))?(\/(\d+)|\.(\d+)|)\s*(.*)\s*$/i,C.epsilon=.001,C.separator=",",C.separatorJoin=", ",C.heuristicLength=3,C.parse=c,C.parseInput=d,C.convert=h,C.best=p,C.splitInput=b,C.combine=f,C.subtract=y,C.compound=m,C.isHeuristicMatch=u,C.conversions=v,C.isSingular=a,C.isWhole=o,C.findUnit=g,C.addClass=G,C.removeUnit=s,C.removeGroup=n,C.Class=q,C.Group=k,C.Parsed=z,C.Fraction=w,C});
//# sourceMappingURL=unitz.min.js.map
